{
  "openapi": "3.0.0",
  "info": {
    "title": "Simple E-commerce API",
    "version": "v1",
    "description": "API for a core e-commerce platform. Allows users to browse products, manage carts, and place orders.",
    "contact": {
      "name": "API Support",
      "url": "http://example.com/support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://api.yourstore.com/v1",
      "description": "Production Server"
    },
    {
      "url": "http://localhost:3000/v1",
      "description": "Development Server"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Access product catalog"
    },
    {
      "name": "Authentication",
      "description": "User registration and login"
    },
    {
      "name": "Profile",
      "description": "User profile management"
    },
    {
      "name": "Cart",
      "description": "Shopping cart operations"
    },
    {
      "name": "Orders",
      "description": "Order management"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "List all products",
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of products per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "Filter by product active status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "examples": {
                  "success": {
                    "value": [
                      { "product_id": 101, "name": "Thai Silk Scarf - Blue", "description": "Beautiful handwoven Thai silk scarf, vibrant blue.", "price": "750.00", "stock_quantity": 50, "image_url": "http://example.com/images/silk_scarf_blue.jpg", "is_active": true },
                      { "product_id": 102, "name": "Mango Sticky Rice DIY Kit", "description": "Kit with all ingredients to make delicious Mango Sticky Rice at home (mango not included).", "price": "350.00", "stock_quantity": 100, "image_url": "http://example.com/images/mango_sticky_rice_kit.jpg", "is_active": true }
                    ]
                  }
                }
              }
            }
          },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "ID of the product to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the product.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "examples": {
                  "success": {
                    "value": { "product_id": 101, "name": "Thai Silk Scarf - Blue", "description": "Beautiful handwoven Thai silk scarf, vibrant blue.", "price": "750.00", "stock_quantity": 50, "image_url": "http://example.com/images/silk_scarf_blue.jpg", "is_active": true }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new customer",
        "operationId": "registerCustomer",
        "requestBody": {
          "description": "Customer registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "409": { "$ref": "#/components/responses/Conflict" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login an existing customer",
        "operationId": "loginCustomer",
        "requestBody": {
          "description": "Customer login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/me": {
      "get": {
        "tags": ["Profile"],
        "summary": "Get current user's profile",
        "operationId": "getCurrentUserProfile",
        "security": [ { "bearerAuth": [] } ],
        "responses": {
          "200": {
            "description": "Current user profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProfile"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "put": {
        "tags": ["Profile"],
        "summary": "Update current user's profile",
        "operationId": "updateCurrentUserProfile",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
            "description": "Fields to update in customer profile.",
            "required": true,
            "content": {
                "application/json": {
                    "schema": {
                        "$ref": "#/components/schemas/UpdateCustomerProfile"
                    }
                }
            }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProfile"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get the current shopping cart",
        "operationId": "getCart",
        "security": [ { "bearerAuth": [] } ],
        "responses": {
          "200": {
            "description": "Current shopping cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Clear all items from the cart",
        "operationId": "clearCart",
        "security": [ { "bearerAuth": [] } ],
        "responses": {
            "200": {
                "description": "Cart cleared successfully.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": { "type": "string" }
                            }
                        },
                        "example": { "message": "Cart cleared successfully."}
                    }
                }
            },
            "401": { "$ref": "#/components/responses/Unauthorized" },
            "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/cart/items": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add an item to the cart",
        "operationId": "addCartItem",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "description": "Product and quantity to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added, returns updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "409": { "$ref": "#/components/responses/Conflict" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/cart/items/{product_id}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update item quantity in cart",
        "operationId": "updateCartItem",
        "security": [ { "bearerAuth": [] } ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "ID of the product in the cart to update",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "description": "New quantity for the item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemQuantity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated, returns updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "409": { "$ref": "#/components/responses/Conflict" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove an item from the cart",
        "operationId": "removeCartItem",
        "security": [ { "bearerAuth": [] } ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "description": "ID of the product to remove from cart",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed, returns updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order (checkout)",
        "operationId": "createOrder",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "description": "Order details including addresses",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrderPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "409": { "$ref": "#/components/responses/Conflict" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "get": {
        "tags": ["Orders"],
        "summary": "List orders for the current user",
        "operationId": "listOrders",
        "security": [ { "bearerAuth": [] } ],
        "responses": {
          "200": {
            "description": "A list of orders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderSummary"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/orders/{order_id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order details by ID",
        "operationId": "getOrderById",
        "security": [ { "bearerAuth": [] } ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "description": "ID of the order to retrieve",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the order.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "product_id": { "type": "integer", "example": 101 },
          "name": { "type": "string", "example": "Thai Silk Scarf - Blue" },
          "description": { "type": "string", "example": "Beautiful handwoven Thai silk scarf, vibrant blue." },
          "price": { "type": "string", "format": "decimal", "example": "750.00" },
          "stock_quantity": { "type": "integer", "example": 50 },
          "image_url": { "type": "string", "format": "url", "example": "http://example.com/images/silk_scarf_blue.jpg" },
          "is_active": { "type": "boolean", "example": true }
        }
      },
      "NewCustomer": {
        "type": "object",
        "required": ["first_name", "last_name", "email", "password"],
        "properties": {
          "first_name": { "type": "string", "example": "Ariya" },
          "last_name": { "type": "string", "example": "Chaidee" },
          "email": { "type": "string", "format": "email", "example": "ariya.c@example.com" },
          "password": { "type": "string", "format": "password", "example": "secureP@ss123" }
        }
      },
      "LoginCredentials": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "format": "email", "example": "ariya.c@example.com" },
          "password": { "type": "string", "format": "password", "example": "userpassword123" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
            "customer_id": { "type": "integer", "example": 1 },
            "first_name": { "type": "string", "example": "Ariya" },
            "last_name": { "type": "string", "example": "Chaidee" },
            "email": { "type": "string", "format": "email", "example": "ariya.c@example.com" },
            "registration_date": { "type": "string", "format": "date-time", "example": "2024-01-15T10:30:00Z"},
            "message": { "type": "string", "example": "Login successful." },
            "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
        }
      },
      "CustomerProfile": {
        "type": "object",
        "properties": {
            "customer_id": { "type": "integer", "example": 1 },
            "first_name": { "type": "string", "example": "Ariya" },
            "last_name": { "type": "string", "example": "Chaidee" },
            "email": { "type": "string", "format": "email", "example": "ariya.c@example.com" },
            "registration_date": { "type": "string", "format": "date-time", "example": "2024-01-15T10:30:00Z"}
        }
      },
      "UpdateCustomerProfile": {
          "type": "object",
          "properties": {
              "first_name": { "type": "string", "example": "Ariya Updated"},
              "last_name": { "type": "string", "example": "Chaidee-Smith"},
              "email": { "type": "string", "format": "email", "description": "Email update might require separate verification flow not covered here.", "example": "ariya.new@example.com" }
          }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "product_id": { "type": "integer", "example": 101 },
          "name": { "type": "string", "example": "Thai Silk Scarf - Blue" },
          "quantity": { "type": "integer", "example": 2 },
          "price_per_unit": { "type": "string", "format": "decimal", "example": "750.00" },
          "subtotal": { "type": "string", "format": "decimal", "example": "1500.00" }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "cart_id": { "type": "string", "example": "user_cart_id_123" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CartItem" }
          },
          "total_items": { "type": "integer", "example": 3 },
          "grand_total": { "type": "string", "format": "decimal", "example": "1620.00" }
        }
      },
      "NewCartItem": {
        "type": "object",
        "required": ["product_id", "quantity"],
        "properties": {
          "product_id": { "type": "integer", "example": 102 },
          "quantity": { "type": "integer", "minimum": 1, "example": 1 }
        }
      },
      "UpdateCartItemQuantity": {
        "type": "object",
        "required": ["quantity"],
        "properties": {
          "quantity": { "type": "integer", "minimum": 0, "example": 3 }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "order_item_id": { "type": "integer", "example": 10001 },
          "product_id": { "type": "integer", "example": 101 },
          "name": {"type": "string", "description": "Product name at time of purchase", "example": "Thai Silk Scarf - Blue"},
          "quantity": { "type": "integer", "example": 1 },
          "price_at_purchase": { "type": "string", "format": "decimal", "example": "750.00" }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": { "type": "integer", "example": 5001 },
          "customer_id": { "type": "integer", "example": 1 },
          "order_date": { "type": "string", "format": "date-time", "example": "2024-06-10T11:00:00Z" },
          "total_amount": { "type": "string", "format": "decimal", "example": "1200.00" },
          "order_status": { "type": "string", "enum": ["pending", "processing", "shipped", "delivered", "cancelled"], "example": "shipped" },
          "shipping_address": { "type": "string", "example": "123 Sukhumvit Rd, Klongtoei, Bangkok 10110, Thailand" },
          "billing_address": { "type": "string", "example": "123 Sukhumvit Rd, Klongtoei, Bangkok 10110, Thailand" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItem" }
          }
        }
      },
      "OrderSummary": {
        "type": "object",
        "properties": {
          "order_id": { "type": "integer", "example": 5001 },
          "order_date": { "type": "string", "format": "date-time", "example": "2024-06-10T11:00:00Z" },
          "total_amount": { "type": "string", "format": "decimal", "example": "1200.00" },
          "order_status": { "type": "string", "enum": ["pending", "processing", "shipped", "delivered", "cancelled"], "example": "shipped" }
        }
      },
      "NewOrderPayload": {
        "type": "object",
        "required": ["shipping_address", "billing_address"],
        "properties": {
          "shipping_address": { "type": "string", "example": "123 Sukhumvit Rd, Klongtoei, Bangkok 10110, Thailand" },
          "billing_address": { "type": "string", "example": "123 Sukhumvit Rd, Klongtoei, Bangkok 10110, Thailand" }
          // "payment_method_token": { "type": "string", "example": "tok_visa_1234" } // Example if integrating payment
        }
      },
      "Error": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": { "type": "string" },
          "code": { "type": "string", "nullable": true },
          "errors": { "type": "array", "items": { "type": "string" }, "nullable": true}
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
        "BadRequest": {
            "description": "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "Invalid input provided.", "errors": ["Field 'email' is not a valid email address."] }
                }
            }
        },
        "Unauthorized": {
            "description": "Unauthorized - Authentication is required and has failed or has not yet been provided.",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "Authentication token is missing or invalid."}
                }
            }
        },
        "Forbidden": {
            "description": "Forbidden - The server understood the request but refuses to authorize it.",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "You do not have permission to access this resource."}
                }
            }
        },
        "NotFound": {
            "description": "Not Found - The requested resource could not be found.",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "Resource not found."}
                }
            }
        },
        "Conflict": {
            "description": "Conflict - The request could not be completed due to a conflict with the current state of the resource (e.g., email already exists, item out of stock).",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "Item out of stock."}
                }
            }
        },
        "InternalServerError": {
            "description": "Internal Server Error - A generic error message, given when an unexpected condition was encountered.",
            "content": {
                "application/json": {
                    "schema": { "$ref": "#/components/schemas/Error" },
                    "example": { "message": "An unexpected error occurred on the server."}
                }
            }
        }
    }
  }
}